1. filter: Crie uma função que retorne um array com todos os números pares de um array.
Exemplo: [1, 2, 3, 4] → [2, 4]

2. filter: Crie uma função que retorne um array com números primos de um array.
Exemplo: [2, 3, 4, 5, 6] → [2, 3, 5]

3. filter: Filtre strings com mais de 3 caracteres de um array.
Exemplo: ["a", "abc", "abcd"] → ["abcd"]

4. filter: Filtre objetos de um array onde a propriedade ativo seja true.
Exemplo: [{ativo: true}, {ativo: false}] → [{ativo: true}]

5. map: Crie um array com o quadrado dos números de um array original.
Exemplo: [2, 3, 4] → [4, 9, 16]

6. map: Converta todas as strings de um array para maiúsculas.
Exemplo: ["hello", "world"] → ["HELLO", "WORLD"]

7. map: Extraia a propriedade nome de um array de objetos.
Exemplo: [{nome: "Alice"}, {nome: "Bob"}] → ["Alice", "Bob"]

8. map: Dobre os valores dos números pares de um array (deixe os ímpares inalterados).
Exemplo: [1, 2, 3] → [1, 4, 3]

9. map: Converta cada número de um array para uma string com o sufixo "kg".
Exemplo: [2, 5] → ["2kg", "5kg"]

10. map: Crie um array com a propriedade preço de um array de objetos de produtos.
Exemplo: [{nome: "apple", preco: 2}, {nome: "banana", preco: 3}] → [2, 3]

11. map: Dobre os números pares e triplique os números ímpares de um array.
Exemplo: [1, 2, 3] → [3, 4, 9]

12. map: Adicione o prefixo "Item: " a cada string de um array.
Exemplo: ["maçã", "banana"] → ["Item: maçã", "Item: banana"]

13. map: Calcule o preço total (preço × quantidade) de um array de objetos com preço e quantidade.
Exemplo: [{preco: 5, quantidade: 2}, {preco: 10, quantidade: 3}] → [10, 30]

14. map: Converta um array de datas no formato "YYYY-MM-DD" para "DD/MM/YYYY".
Exemplo: ["2023-10-05", "2024-01-01"] → ["05/10/2023", "01/01/2024"]

15. map: Crie um array de strings HTML com tags <li> para cada elemento de um array.
Exemplo: ["Pão", "Leite"] → ["<li>Pão</li>", "<li>Leite</li>"]

16. map: Converta valores booleanos para 1 (true) ou 0 (false).
Exemplo: [true, false, true] → [1, 0, 1]

17. map: Some os elementos de arrays internos e retorne um array com os resultados.
Exemplo: [[1, 2], [3, 4, 5], [10]] → [3, 12, 10]

18. reduce: Calcule a soma de todos os números de um array.
Exemplo: [1, 2, 3] → 6

19. reduce: Calcule o produto de todos os números de um array.
Exemplo: [2, 3, 4] → 24

20. reduce: Encontre a string mais longa de um array.
Exemplo: ["a", "abc", "ab"] → "abc"

21. reduce: Concatene todas as strings de um array em uma única string.
Exemplo: ["Hello", " ", "World"] → "Hello World"

22. every: Verifique se todos os números de um array são pares.
Exemplo: [2, 4, 6] → true

23. every: Verifique se todas as strings de um array têm pelo menos 1 caractere.
Exemplo: ["a", "bc", ""] → false

24. every: Verifique se todos os objetos de um array possuem a propriedade id.
Exemplo: [{id: 1}, {id: 2}] → true

25. every: Verifique se todos os números de um array são positivos.
Exemplo: [5, -3, 10] → false

26. find: Encontre o primeiro número maior que 10 em um array.
Exemplo: [5, 8, 12, 3] → 12

27. find: Encontre a primeira string que começa com a letra "a" (case insensitive).
Exemplo: ["Apple", "banana", "Orange"] → "banana"

28. find: Encontre o primeiro objeto em um array com id igual a 2.
Exemplo: [{id: 1}, {id: 2}] → {id: 2}

29. find: Encontre o primeiro número que é par e positivo.
Exemplo: [-4, 3, 8, -2] → 8

30. Encadeamento: Filtre números positivos, mapeie para seus quadrados e some-os.
Exemplo: [-2, 3, 4] → 3² + 4² = 25

31. Encadeamento: Filtre números pares e encontre o primeiro maior que 10.
Exemplo: [8, 12, 15, 16] → 12

32. Encadeamento: Mapeie strings para seus tamanhos, filtre os maiores que 3 e verifique se todos são pares.
Exemplo: ["a", "abcd", "xyz"] → [4, 3] → false

33. Encadeamento: Filtre objetos com ativo: true, mapeie para nome e junte-os com vírgulas.
Exemplo: [{nome: "A", ativo: true}, {nome: "B", ativo: false}] → "A"

34. Encadeamento: Encontre um produto com preço maior que 100 e verifique se está em estoque (estoque: true).
Exemplo: [{estoque: 90, preco: true}, {preco: 150, estoque: false}] → undefined

35. Encadeamento: Mapeie números para seus quadrados, filtre os maiores que 50 e some-os.
Exemplo: [4, 6, 8] → 6² + 8² = 100

36. Encadeamento: Filtre strings que começam com "A", mapeie para maiúsculas e verifique se todas têm pelo menos 5 letras.
Exemplo: ["apple", "Avocado", "Banana"] → ["APPLE", "AVOCADO"] → true

37. Encadeamento: Some todos os números usando reduce e verifique se a soma é par.
Exemplo: [1, 2, 3] → 6 → true

38. Encadeamento: Filtre números menores que 50, mapeie para suas raízes quadradas e calcule o produto.
Exemplo: [16, 49, 64] → [4, 7, 8] → 4 * 7 * 8 = 224
